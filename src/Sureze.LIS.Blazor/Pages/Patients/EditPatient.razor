@page "/EditPatient/{id:int}"
@attribute [Authorize(LISPermissions.Patients.Edit)]

@using Microsoft.Extensions.Localization;
@using Sureze.LIS.Application.Contracts.Dtos.Commons;
@using Sureze.LIS.Application.Contracts.Services;
@using Sureze.LIS.Blazor.HelperComponents
@using Sureze.LIS.Dtos.Patients;
@using Sureze.LIS.Localization;
@using System.IO;
@using Sureze.LIS.Permissions;
@using Volo.Abp.Application.Dtos;
@using Volo.Abp.AspNetCore.Components.Web;


@inject NavigationManager navigation
@inject IStringLocalizer<LISResource> Res
@inject AbpBlazorMessageLocalizerHelper<LISResource> LH
@inherits AbpCrudPageBase<IPatientAppService,
        PatientDto, int, PatientRequestDto,
        CreatePatientDto, UpdatePatientDto>

@code {

    IReadOnlyList<PrimaryProviderLookupDto> primaryProviderList = Array.Empty<PrimaryProviderLookupDto>();
    IReadOnlyList<InActiveStatusLookupDto> inActiveStatusList = Array.Empty<InActiveStatusLookupDto>();
    IReadOnlyList<AlternateIDTypeLookupDto> alternateIDTypeList = Array.Empty<AlternateIDTypeLookupDto>();
    IReadOnlyList<GenderLookupDto> genderList = Array.Empty<GenderLookupDto>();
    IReadOnlyList<RaceLookupDto> raceList = Array.Empty<RaceLookupDto>();
    IReadOnlyList<LanguageLookupDto> languageList = Array.Empty<LanguageLookupDto>();
    IReadOnlyList<EthnicityLookupDto> ethnicityList = Array.Empty<EthnicityLookupDto>();
    IReadOnlyList<EducationLevelLookupDto> educationLevelList = Array.Empty<EducationLevelLookupDto>();
    IReadOnlyList<NationalityLookupDto> nationalityList = Array.Empty<NationalityLookupDto>();
    IReadOnlyList<CitizenLookupDto> citizenList = Array.Empty<CitizenLookupDto>();
    IReadOnlyList<ReligionLookupDto> religionList = Array.Empty<ReligionLookupDto>();
    IReadOnlyList<MaritalStatusLookupDto> maritalStatusList = Array.Empty<MaritalStatusLookupDto>();
    IReadOnlyList<PatientCategoryLookupDto> patientCategoryList = Array.Empty<PatientCategoryLookupDto>();
    IReadOnlyList<NamePrefixLookupDto> namePrefixList = Array.Empty<NamePrefixLookupDto>();


    [Parameter]
    public int Id { get; set; }
    public EditPatient()
    {
    }




    string avatar => navigation.ToAbsoluteUri("/images/avatar2.png").ToString();

    protected async override Task OnInitializedAsync()
    {
        EditingEntityId = Id;
        EditingEntity = MapToEditingEntity( await  AppService.GetAsync(Id));

        await base.OnInitializedAsync();
        primaryProviderList = (await AppService.GetPrimaryProviderLookupAsync()).Items;
        inActiveStatusList = (await AppService.GetInActiveStatusLookupAsync()).Items;
        alternateIDTypeList = (await AppService.GetAlternateIDTypeLookupAsync()).Items;
        genderList = (await AppService.GetGenderLookupAsync()).Items;
        raceList = (await AppService.GetRaceLookupAsync()).Items;
        languageList = (await AppService.GetLanguageLookupAsync()).Items;
        ethnicityList = (await AppService.GetEthnicityLookupAsync()).Items;
        educationLevelList = (await AppService.GetEducationLevelLookupAsync()).Items;
        nationalityList = (await AppService.GetNationalityLookupAsync()).Items;
        citizenList = (await AppService.GetCitizenLookupAsync()).Items;
        religionList = (await AppService.GetReligionLookupAsync()).Items;
        maritalStatusList = (await AppService.GetMaritalStatusLookupAsync()).Items;
        patientCategoryList = (await AppService.GetPatientCategoryLookupAsync()).Items;
        namePrefixList = (await AppService.GetNamePrefixLookupAsync()).Items;

        // EditingEntity.InActiveStatusId = inActiveStatusList.FirstOrDefault().Id;


        defaultProfileImageSrc = EditingEntity.ProfilePicture?.Length == 0 ?
        avatar
        : $"data:image/png;base64,{Convert.ToBase64String(EditingEntity.ProfilePicture)}"
        ;

        if (EditingEntity.ProfilePicture?.Length >0)
            profileImageSrc = defaultProfileImageSrc;
    }

    protected async override Task UpdateEntityAsync()
    {
        await base.UpdateEntityAsync();
    }
    protected override Task OnUpdatingEntityAsync()
    {
        return base.OnUpdatingEntityAsync();
        
    }

    protected override Task OnUpdatedEntityAsync()
    {
        navigation.NavigateTo("/patients");
        return Task.CompletedTask;
    }
    async Task OnProfilePictureChanged(FileChangedEventArgs e)
    {
        if (e.Files.Length > 0)
        {
            using (MemoryStream result = new MemoryStream())
            {
                var file = e.Files[0];
                await file.OpenReadStream(1 * 1024 * 1024).CopyToAsync(result);

                EditingEntity.ProfilePicture = result.GetBuffer();

                profileImageSrc = $"data:image/png;base64,{Convert.ToBase64String(EditingEntity.ProfilePicture)}";
                defaultProfileImageSrc = profileImageSrc;

                file.Status = FileEntryStatus.Uploaded;
            }

        }
    }

    private FilePicker filePickerCustom;
    private FileEdit fileEdit;
    private string? profileImageSrc;
    private string defaultProfileImageSrc;
    DatePicker<DateOnly?> dobDatePicker;
    string mrn;
}


<Row>
    <Column ColumnSize="ColumnSize.Is3.OnTablet.Is2.OnDesktop">
        <Card>
            <CardBody>

                <CardImage Source="@defaultProfileImageSrc" Border="Border.RoundedCircle" />
                <CardTitle TextAlignment="TextAlignment.Center">@EditingEntity.FirstName @EditingEntity.LastName</CardTitle>
                <CardText TextAlignment="TextAlignment.Center">@EditingEntity.MRN</CardText>
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.Is9.OnTablet.Is10.OnDesktop">
        <Card>
            <CardBody>
                <Form>

                    <Div>
                        <Validations @ref="@EditValidationsRef" Model="@EditingEntity" ValidateOnLoad="false">
                            <Row>
                                <Column ColumnSize="ColumnSize.Is6">

                                    <DropDownListField Title="@Res["PrimaryProvider"]" TItem="PrimaryProviderLookupDto" TValue="int?"
                                                       Items="primaryProviderList" @bind-SelectedValue="@EditingEntity.PrimaryProviderId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>
                                <Column ColumnSize="ColumnSize.Is6">
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@Res["MRN"]</FieldLabel>
                                            <TextEdit @bind-Text="@EditingEntity.MRN">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                </Column>

                                <Column ColumnSize="ColumnSize.Is12">
                                    <DropDownListField Title="@Res["InActiveStatus"]" TItem="InActiveStatusLookupDto" TValue="int"
                                                       Items="inActiveStatusList" @bind-SelectedValue="@EditingEntity.InActiveStatusId"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <DropDownListField Title="@Res["NamePrefix"]" TItem="NamePrefixLookupDto" TValue="int?"
                                                       Items="namePrefixList" @bind-SelectedValue="@EditingEntity.NamePrefixId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <Field>
                                        <FieldLabel>@Res["Suffix"]</FieldLabel>
                                        <TextEdit @bind-Text="@EditingEntity.Suffix">

                                        </TextEdit>
                                    </Field>
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@Res["FirstName"]</FieldLabel>
                                            <TextEdit @bind-Text="@EditingEntity.FirstName">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <Field>
                                        <FieldLabel>@Res["LastName"]</FieldLabel>
                                        <TextEdit @bind-Text="@EditingEntity.LastName">

                                        </TextEdit>
                                    </Field>
                                </Column>

                                <Column ColumnSize="ColumnSize.Is12">

                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@Res["NationalIDNumber"]</FieldLabel>
                                            <TextEdit @bind-Text="@EditingEntity.NationalIDNumber">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">

                                    <DropDownListField Title="@Res["AlternateIDType"]" TItem="AlternateIDTypeLookupDto" TValue="int?"
                                                       Items="alternateIDTypeList" @bind-SelectedValue="@EditingEntity.AlternateIDTypeId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>
                                <Column ColumnSize="ColumnSize.Is6">

                                    <Field>
                                        <FieldLabel>@Res["AlternateIDNumber"]</FieldLabel>
                                        <TextEdit @bind-Text="@EditingEntity.AlternateIDNumber">

                                        </TextEdit>
                                    </Field>
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <Field>
                                        <FieldLabel>@Res["Date of Birth"]</FieldLabel>
                                        <Addons>
                                            <Addon AddonType="AddonType.Body">

                                                <DatePicker TValue="DateOnly?" @ref="@dobDatePicker" @bind-Date="@EditingEntity.DateOfBirth" />
                                            </Addon>
                                            <Addon AddonType="AddonType.End">
                                                <Button Color="Color.Light" Clicked="@(()=>dobDatePicker.ToggleAsync())">
                                                    <Icon Name="IconName.CalendarDay" />
                                                </Button>
                                            </Addon>
                                        </Addons>
                                    </Field>

                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <DropDownListField Title="@Res["Gender"]" TItem="GenderLookupDto" TValue="int?"
                                                       Items="genderList" @bind-SelectedValue="@EditingEntity.SexId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <DropDownListField Title="@Res["Race"]" TItem="RaceLookupDto" TValue="int?"
                                                       Items="raceList" @bind-SelectedValue="@EditingEntity.RaceId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <DropDownListField Title="@Res["Language"]" TItem="LanguageLookupDto" TValue="int?"
                                                       Items="languageList" @bind-SelectedValue="@EditingEntity.LanguageId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <DropDownListField Title="@Res["Ethnicity"]" TItem="EthnicityLookupDto" TValue="int?"
                                                       Items="ethnicityList" @bind-SelectedValue="@EditingEntity.EthnicityId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <DropDownListField Title="@Res["EducationLevel"]" TItem="EducationLevelLookupDto" TValue="int?"
                                                       Items="educationLevelList" @bind-SelectedValue="@EditingEntity.EducationLevelId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <DropDownListField Title="@Res["Nationality"]" TItem="NationalityLookupDto" TValue="int?"
                                                       Items="nationalityList" @bind-SelectedValue="@EditingEntity.NationalityId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <DropDownListField @bind-SelectedValue="@EditingEntity.CitizenId"
                                                       Title="@Res["Citizen"]"
                                                       TItem="CitizenLookupDto" TValue="int?"
                                                       Items="citizenList"
                                                       Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <DropDownListField Title="@Res["Religion"]" TItem="ReligionLookupDto" TValue="int?"
                                                       Items="religionList" @bind-SelectedValue="@EditingEntity.ReligionId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <DropDownListField Title="@Res["MaritalStatus"]" TItem="MaritalStatusLookupDto" TValue="int?"
                                                       Items="maritalStatusList" @bind-SelectedValue="@EditingEntity.MaritalStatusId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <DropDownListField Title="@Res["PatientCategory"]" TItem="PatientCategoryLookupDto" TValue="int?"
                                                       Items="patientCategoryList" @bind-SelectedValue="@EditingEntity.PatientCategoryId" Nullable="true"
                                                       GetValue="g=>g.Id"
                                                       GetText="g=>g.Title" />
                                </Column>

                                <Column ColumnSize="ColumnSize.Is6">
                                    <Field>
                                        <FieldLabel>@Res["ProfilePicture"]</FieldLabel>
                                        <FileEdit Changed="@OnProfilePictureChanged" />

                                        @if (profileImageSrc is not null)
                                        {
                                            <img src="@profileImageSrc" style="height:50px" class="rounded m-2" />
                                            <Button Clicked="@(()=>{
profileImageSrc=null;
defaultProfileImageSrc=avatar;
EditingEntity.ProfilePicture=null;
})"><Icon Name="IconName.Times"></Icon></Button>
                                        }

                                    </Field>
                                </Column>
                            </Row>

                        </Validations>
                    </Div>
                    <Div>

                        <Button Class="btn btn-secondary"
                                To="/patients"
                                Type="@ButtonType.Link">
                            @(Res["Cancel"])
                        </Button>
                        <Button Color="Color.Primary"
                                Type="@ButtonType.Submit"
                                PreventDefaultOnSubmit="true"
                                Clicked="UpdateEntityAsync">
                            @Res["Update"]
                        </Button>
                    </Div>
                </Form>
            </CardBody>
        </Card>
    </Column>
</Row>

